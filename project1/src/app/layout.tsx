import type { Metadata } from "next";
import "./globals.css";
import { storyblokInit,apiPlugin } from "@storyblok/react/rsc";
import { StoryblokProvider } from "@/components/StoryblokProvider";
import {Tour} from '../components/Tour';
import {Page} from '../components/Page';
import {Hero} from '../components/Hero';
import {Grid} from '../components/Grid';
import {Feature} from '../components/Feature';
import {Testimonial} from '../components/Testimonial';
import {RecommendedTours} from '../components/RecommendedTours';
import Link from "next/link";
import {StatisticsSection} from '../components/blok/StatisticsSection';
import { Titillium_Web } from "next/font/google";

const titillium = Titillium_Web({
  subsets: ["latin"],
  weight: ["400","600","700"],
  variable: "--font-titillium",
});

export const metadata: Metadata = {
  title: "Tech-Tour",
  description: "Generated by create next app",
};
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const cachedFetch=(input:any,init?:any):Promise<Response> =>{
  return fetch(input,{
    ...init,
    cache:"no-store",
  });
};


storyblokInit({
  accessToken:process.env.STORYBLOK_TOKEN,
  use:[apiPlugin],
  apiOptions:{
    fetch:cachedFetch,
  },
  components: {
      tour: Tour,
      page: Page,
      hero: Hero,
      grid: Grid,
      feature: Feature,
      testimonial: Testimonial,
      recommended_tours: RecommendedTours,
      statistics_section: StatisticsSection,//      stat_item: StatItem,
    },
});

export default function RootLayout({  children,}: Readonly<{  children: React.ReactNode;}>) {
  return (
    <StoryblokProvider>
      <html lang="en">
      <body className={`${titillium.className} bg-blue-50`}>
        <header>
          <nav className="container mx-auto px-4 w-full py-6 flex justify-between font-bold">
            <Link href={"/"}>Home</Link>
            <Link href={"/tours"}>Tours</Link>
            <Link href={"/statistics"}>Statistics</Link>
          </nav>
        </header>
        {children}
      </body>
    </html>      
    </StoryblokProvider>
    
  );
}
